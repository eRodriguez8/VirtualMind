//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VirtualMind.TechnicalEvaluation.Dal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CDsEntities : DbContext
    {
        public CDsEntities()
            : base("name=CDsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AUD_dContenedores> AUD_dContenedores { get; set; }
        public virtual DbSet<AUD_dLimpieza> AUD_dLimpieza { get; set; }
        public virtual DbSet<AUD_dPosiciones> AUD_dPosiciones { get; set; }
        public virtual DbSet<AUD_dSectores> AUD_dSectores { get; set; }
        public virtual DbSet<AUD_sTiposAuditoria> AUD_sTiposAuditoria { get; set; }
        public virtual DbSet<AUD_dIncidencias> AUD_dIncidencias { get; set; }
    
        public virtual ObjectResult<PosicionDeArticulos> AUD_dArticulosyUbicaciones(string valor, Nullable<int> region)
        {
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var regionParameter = region.HasValue ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PosicionDeArticulos>("AUD_dArticulosyUbicaciones", valorParameter, regionParameter);
        }
    
        public virtual ObjectResult<DatosVolumetricos> AUD_dVolumenArticulos(string valor, Nullable<int> region)
        {
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var regionParameter = region.HasValue ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatosVolumetricos>("AUD_dVolumenArticulos", valorParameter, regionParameter);
        }
    }
}
